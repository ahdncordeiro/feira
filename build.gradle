plugins {
    id 'application'
    id 'com.avast.gradle.docker-compose' version '0.12.1'
    id 'idea'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'org.liquibase.gradle' version '2.0.3'
    id 'org.springframework.boot' version '2.3.0.RELEASE'
}

repositories {
    mavenCentral()
}

group = 'com.andrecordeiro'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_14
    targetCompatibility = JavaVersion.VERSION_14
    withJavadocJar()
    withSourcesJar()
}

application {
    mainClassName 'com.andrecordeiro.items.ItemsApplication'
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.java.srcDirs
        testResourceDirs += sourceSets.integrationTest.resources.srcDirs
        scopes.TEST.plus += [configurations.integrationTestCompile]
    }
}

configurations {
    testAnnotationProcessor.extendsFrom annotationProcessor
    testCompileOnly.extendsFrom compileOnly

    integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
    integrationTestCompileOnly.extendsFrom testCompileOnly
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    compileOnly 'org.jetbrains:annotations:19.0.0'
    compileOnly 'org.projectlombok:lombok:1.18.12'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.liquibase:liquibase-core:3.9.0'
    implementation 'org.modelmapper:modelmapper:2.3.7'
    implementation 'org.postgresql:postgresql:42.2.12'
    implementation 'org.springdoc:springdoc-openapi-ui:1.4.0'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

task integrationTest(type: Test, group: 'verification', description: 'Runs the integration tests.') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
    useJUnitPlatform()
}
dockerCompose.isRequiredBy(integrationTest) // hooks 'dependsOn composeUp' and 'finalizedBy composeDown'
check.dependsOn integrationTest
